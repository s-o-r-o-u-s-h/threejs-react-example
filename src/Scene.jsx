/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 scene.gltf --transform
Author: kiliankoe (https://sketchfab.com/kiliankoe)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/simple-robot-d560abac003249b293aed39a850dee72
Title: Simple Robot
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function Model({onClickElem, ...props}) {
  const { nodes, materials } = useGLTF('/scene-transformed.glb');
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[0, 0.02, 2.36]} scale={[0.88, 0.67, 0.83]}>
          <group position={[0.67, -0.04, -1.62]} scale={[0.19, 0.39, 0.72]} onClick={e => onClickElem(e.object.parent.position)}>
            <mesh geometry={nodes.Leg_Left_1.geometry}>
              <meshStandardMaterial color={0xff0000} />
            </mesh>
            <mesh geometry={nodes.Foot_Left_1.geometry} position={[0.77, -0.9, -1.25]} rotation={[0, -0.11, 0.04]} scale={[2.39, 2.66, 0.38]}>
              <meshStandardMaterial color={0xff0000} />
            </mesh>
          </group>
          <group position={[-0.68, 0, -1.51]} scale={[0.19, 0.39, 0.72]} onClick={e => onClickElem(e.object.parent.position)}>
            <mesh geometry={nodes.Leg_Right_1.geometry}>
              <meshStandardMaterial color={0x00ff00} />
            </mesh>
            <mesh geometry={nodes.Foot_Right_1.geometry} position={[-0.57, -1.02, -1.41]} rotation={[0, -0.11, 0.04]} scale={[2.39, 2.66, 0.38]}>
              <meshStandardMaterial color={0x00ff00} />
            </mesh>
          </group>
          <group position={[0, -0.06, 1.18]} scale={[0.83, 1.1, 1.08]}>
            <group position={[0, 0.02, 1.55]} scale={[2.15, 1.45, 1.35]}>
              <mesh geometry={nodes.Head_1.geometry} material={materials.Root} />
              <mesh geometry={nodes.Antenna_Right_Top_1.geometry} material={materials.Root} position={[-1.14, -0.19, 2.1]} scale={[0.05, 0.08, 0.07]} />
              <mesh geometry={nodes.Antenna_Right_1.geometry} material={materials.Root} position={[-1.03, -0.19, 1.19]} scale={[0.63, 0.94, 0.83]} />
              <mesh geometry={nodes.Eye_Right_1.geometry} material={materials.Root} position={[-0.46, -1.02, 0.13]} rotation={[Math.PI / 2, 0, 0]} scale={[1.38, 1.79, 0.94]} />
              <mesh geometry={nodes.Eye_Left_1.geometry} material={materials.Root} position={[0.47, -1.02, 0.13]} rotation={[Math.PI / 2, 0, 0]} scale={[1.02, 1.32, 0.94]} />
              <mesh geometry={nodes.Antenna_Left_Top_1.geometry} material={materials.Root} position={[1.08, -0.2, 1.96]} scale={[0.05, 0.08, 0.07]} />
              <mesh geometry={nodes.Ears_1.geometry} material={materials.Root} position={[0, -0.21, 0.11]} rotation={[0, Math.PI / 2, 0]} scale={[1.32, 1.51, 1.01]} />
            </group>
            <mesh geometry={nodes.Neck_1.geometry} material={materials.Root} />
          </group>
          <group position={[0, 0.07, 0.18]} rotation={[Math.PI / 2, Math.PI / 2, 0]} scale={[2.93, 2.34, 1.51]}>
            <group position={[0, -0.05, -1.22]} rotation={[0, 0, -Math.PI / 2]} scale={[0.08, 0.08, 0.44]} onClick={e => onClickElem(e.object.parent.position)}>
              <mesh geometry={nodes.Arm_Right_1.geometry}>
                <meshStandardMaterial color={0x00ff00} />
              </mesh>
              <mesh geometry={nodes.Hand_Right_1.geometry} position={[1.9, 0, -1.3]} rotation={[1.17, 0.09, 1.69]} scale={[0.35, 1.37, 0.6]}>
                <meshStandardMaterial color={0x00ff00} />
              </mesh>
            </group>
            <group position={[0, -0.05, 1.22]} rotation={[0, 0, -Math.PI / 2]} scale={[0.08, 0.08, 0.44]} onClick={e => onClickElem(e.object.parent.position)}>
              <mesh geometry={nodes.Arm_Left_1.geometry}>
                <meshStandardMaterial color={0xff0000} />
              </mesh>
              <mesh geometry={nodes.Hand_Left_1.geometry} position={[1.99, 0, 1.31]} rotation={[1.17, 0.09, 1.69]} scale={[0.35, 1.37, 0.6]}>
                <meshStandardMaterial color={0xff0000} />
              </mesh>
            </group>
            <mesh geometry={nodes.Shoulders_1.geometry} material={materials.Root} />
          </group>
          <mesh geometry={nodes.Body_1.geometry} material={materials.Root} />
          <mesh geometry={nodes.Pipes_1.geometry} material={materials.Root} position={[0, -0.89, -0.29]} rotation={[Math.PI / 2, 0, 0]} scale={[0.28, 0.3, 0.37]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene-transformed.glb')
